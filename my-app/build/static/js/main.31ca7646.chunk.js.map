{"version":3,"sources":["logo.svg","component/list.jsx","come.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","List","props","className","this","list","map","item","key","job","city","time","Component","Come","state","src","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,2ICEtBC,E,YACjB,WAAYC,GAAQ,qEACVA,I,sEAGN,OACI,6BACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,cACX,0DACA,+CAEJ,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SAEPC,KAAKF,MAAMG,KAAKC,KAAI,SAACC,EAAMC,GACvB,OAAQ,yBAAKA,IAAKA,EAAKL,UAAU,iBAAgB,8BAAOI,EAAKE,KAAW,8BAAOF,EAAKG,MAAY,8BAAOH,EAAKI,kB,GAhB1GC,aCCbC,E,YACjB,WAAYX,GAAQ,IAAD,8BACf,4CAAMA,KACDY,MAAQ,CACTT,KAAM,CAAC,CACHI,IAAK,4FAAuBC,KAAM,qBAAOC,KAAM,wBACjD,CACEF,IAAK,qGAAsBC,KAAM,eAAMC,KAAM,wBAC/C,CACEF,IAAK,iEAAgBC,KAAM,eAAMC,KAAM,wBACzC,CACEF,IAAK,6EAAkBC,KAAM,eAAMC,KAAM,wBAC3C,CACEF,IAAK,+BAAYC,KAAM,eAAMC,KAAM,uBACrC,CACEF,IAAK,iDAAeC,KAAM,eAAMC,KAAM,uBACxC,CACEF,IAAK,uHAA8BC,KAAM,eAAMC,KAAM,uBACvD,CACEF,IAAK,oEAAmBC,KAAM,eAAMC,KAAM,uBAC5C,CACEF,IAAK,uHAA8BC,KAAM,eAAMC,KAAM,uBACvD,CACEF,IAAK,+BAAYC,KAAM,eAAMC,KAAM,uBACrC,CACEF,IAAK,uHAA8BC,KAAM,eAAMC,KAAM,yBAxB9C,E,sEAgCf,OACI,6BACI,4BAAQR,UAAU,QACd,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,QAAO,yBAAKA,UAAU,OAAM,yBAAKY,IAAI,uEAAgF,yBAAKZ,UAAU,QANtJ,CAAC,2BAAQ,eAAM,2BAAQ,2BAAQ,2BAAQ,4BAQvBG,KAAI,SAACC,EAAMC,GACZ,OAAO,0BAAMA,IAAKA,EAAKL,UAAU,MAAMI,QAKnD,yBAAKJ,UAAU,SAAQ,+GAAwB,6BAAK,8CAAe,mCAAc,kDAGzF,6BAASA,UAAU,SACf,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACX,qDACA,mDACA,4FACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,QAAQa,YAAY,qDACrC,yBAAKb,UAAU,UAAf,iBAEJ,6BA1BR,CAAC,2BAAQ,OAAQ,MAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBA4B9CG,KAAI,SAACC,EAAMC,GACX,OAAO,0BAAMA,IAAKA,EAAKL,UAAU,OAAOI,UAOhE,6BAASJ,UAAU,QACX,kBAAC,EAAD,CAAME,KAAMD,KAAKU,MAAMT,OACvB,yBAAKF,UAAU,OACf,yBAAKA,UAAU,aAAY,yBAAKY,IAAI,yEACpC,yBAAKZ,UAAU,iBAAgB,yBAAKY,IAAI,yEAIhD,4BAAQZ,UAAU,QAAlB,8F,GA5EkBS,a,MCUnBK,MARf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,QCIce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.31ca7646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\n\nexport default class List extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"listCom\">\n                    <div className=\"listComtop\">\n                        <span>最新职位</span>\n                        <span>更多</span>\n                    </div>\n                    <div className=\"listGo\">\n                    <div className='rowup'>\n                        {\n                            this.props.list.map((item, key) => {\n                                return (<div key={key} className=\"listLoop item\"><span>{item.job}</span><span>{item.city}</span><span>{item.time}</span></div>)\n                            })\n                        }\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport List from './component/list'\n\nexport default class Come extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [{\n                job: \"网商银行-H5前端开发专家-杭州/北京\", city: '哈尔冰', time: '35分钟前'\n            },{\n                job: \"天猫家装-本地线下业务拓展专家-杭州\", city: '杭州', time: '22分钟前'\n            },{\n                job: \"蚂蚁金服-产品运营专家 \", city: '北京', time: '40分钟前'\n            },{\n                job: \"阿里集团-飞猪-场景运营专家\", city: '杭州', time: '10分钟前'\n            },{\n                job: \"口碑-O2O业务\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务发展专\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务发展专家/高级专家-南宁/海口/三亚\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务发展专家/高级\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务发展专家/高级专家-南宁/海口/三亚\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务\", city: '南京', time: '9分钟前'\n            },{\n                job: \"口碑-O2O业务发展专家/高级专家-南宁/海口/三亚\", city: '南京', time: '9分钟前'\n            }]\n        }\n    }\n\n    render() {\n        const menu = ['社招官网', '首页', '社会招聘', '校园招聘', '了解阿里', '个人中心']\n        const job = ['热门搜索', 'JAVA', 'IOS', '数据', '安全', '搜索', '算法', '运营', '视觉', '交互', '前端']\n        return (\n            <div>\n                <header className=\"head\">\n                    <div className=\"headcContent\">\n                        <div className=\"left\"><div className=\"img\"><img src='https://img.alicdn.com/tfs/TB1Zv8_lxSYBuNjSspjXXX73VXa-390-63.png'></img></div><div className=\"menu\">\n                            {\n                                menu.map((item, key) => {\n                                    return <span key={key} className=\"li\">{item}</span>\n                                })\n                            }\n\n                        </div></div>\n                        <div className=\"right\"><div>欢迎来到阿里巴巴集团招聘！</div><div><span>登录</span><span>|</span><span>注册</span></div></div>\n                    </div>\n                </header>\n                <section className=\"bgimg\">\n                    <div className=\"imgContent\">\n                        <div className=\"conCenter\">\n                            <h1>If not now，when?</h1>\n                            <h1>If not me，who?</h1>\n                            <h2>此时此刻，非我莫属！</h2>\n                            <div className=\"ipt\">\n                                <input className=\"input\" placeholder=\"请输入职位关键词\"></input>\n                                <div className=\"search\">搜索</div>\n                            </div>\n                            <div>\n                                {\n                                    job.map((item, key) => {\n                                        return <span key={key} className=\"job\">{item}</span>\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"list\">\n                        <List list={this.state.list}></List>\n                        <div className=\"two\">\n                        <div className=\"twoChoose\"><img src=\"https://img.alicdn.com/tfs/TB1SbxarYj1gK0jSZFOXXc7GpXa-2546-848.png\"/></div>\n                        <div className=\"twoChoose svg\"><img src=\"https://img.alicdn.com/tfs/TB18tFCCH2pK1RjSZFsXXaNlXXa-240-34.svg\"></img></div>\n\n                        </div>\n                </section>\n                <footer className=\"foot\">阿里巴巴集团 Copyright ©1999-2020 版权所有</footer>\n            </div>\n        )\n\n    }\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport  Come from'./come'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Come></Come>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}